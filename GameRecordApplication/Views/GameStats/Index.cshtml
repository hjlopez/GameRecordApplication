@model GameRecordApplication.ViewModels.MatchViewModel
@{
    /**/

    ViewBag.Title = "Index";


}

@using PagedList.Mvc;
@using PagedList;

@if (@ViewBag.SuccessMessage != "")
{
    <br />
    if (Model.IsErrorMessage)
    {
        <div class="alert alert-danger" role="alert" data-dismiss="alert">
            @ViewBag.SuccessMessage
        </div>
    }
    else
    {
        <div class="alert alert-success" role="alert" data-dismiss="alert">
            @ViewBag.SuccessMessage
        </div>
    }

}
<br /><br />
<div class="col-md-2">
    <h4>Filter by Games</h4>
    <div class="list-group">
        @Html.ActionLink("All", "Index", null, new { @class = Request["Category"] == null ? "list-group-item active" : "list-group-item" })
        @foreach (var game in Model.ListOfGames)
        {
            @Html.ActionLink(game.GameName, "Index", new { Category = game.GameName }, new { @class = Request["Category"] == game.GameName ? "list-group-item active" : "list-group-item" })
        }
    </div>
    @if (Request["Category"] != null && Request["Category"] == "Billiards")
    {
        <a class="btn btn-success" href="@Url.Action("Create", "Match", new { Category = Request["Category"] })">New Entry</a>


    }
</div>
<div class="col-md-10">
    @foreach (var game in Model.ListOfGames)
    {
        if (Request.Params["Category"] == game.GameName && game.HasSeason)
        {
            <div>
                <a class="btn btn-success">Game Settings</a>
                <a class="btn btn-primary" data-target="#filter" data-toggle="modal">Filter by Season</a>
                <a class="btn btn-primary" data-target="#addSeason" data-toggle="modal">Add Season</a>
            </div>
            <br />
        }
    }

    @if (Model.ListOfMatches != null)
    {
        for (int i = 0; i < Model.ListOfMatches.Count(); i++)
        {
            <div class="row">
                <br />
                <div class="col-sm-6 table-bordered">
                    <div class="card ">
                        <div class="card-body ">
                            @* Display player names *@
                            <h5 class="card-title">@Model.ListOfUsers.FirstOrDefault(user => user.UserId == Model.ListOfMatches.ElementAt(i).PlayerWin).FirstName  vs @Model.ListOfUsers.FirstOrDefault(user => user.UserId == Model.ListOfMatches.ElementAt(i).PlayerIdLose).FirstName</h5>
                            <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                            <a href="#" class="btn btn-primary link">View Details</a>
                        </div>
                    </div>
                </div>
                @{ i++;}

                @if (Model.ListOfMatches.Count() != i)
                {
                    <div class="col-sm-6 table-bordered">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">@Model.ListOfUsers.FirstOrDefault(user => user.UserId == Model.ListOfMatches.ElementAt(i).PlayerWin).FirstName  vs @Model.ListOfUsers.FirstOrDefault(user => user.UserId == Model.ListOfMatches.ElementAt(i).PlayerIdLose).FirstName</h5>
                                <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
                                <a href="#" class="btn btn-primary link">View Details</a>
                            </div>
                        </div>
                    </div>

                }

            </div>
        }
        @Html.PagedListPager(Model.ListOfMatches, i => Url.Action("Index", "GameStats", new {  Category = Request.Params["Category"], i }))
        @*@Html.PagedListPager(Model.ListOfMatches, i => Url.Action("Index", "GameStats", new { i, search = Request.QueryString["search"] }))*@
    }

</div>
@* Edit modal - 20191029 *@
<div class="modal fade" id="filter" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Filter by Season</h4>
            </div>
            <div class="modal-body">
                @*@if(Model.ListofSeasons.Count() != 0)
                    {
                        <div class="form-group">
                            <div class="col-md-10">

                            </div>
                        </div>
                    }
                    else
                    {
                        <p>Current Season: 0</p>
                    }*@
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" data-dismiss="modal">Close</button>
                <button class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
@* Season Modal *@
<div class="modal fade" id="addSeason" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Add Season to @Request.Params["Category"]</h4>
            </div>
            <div class="modal-body">
                @{long season = 0; }
                @if (Model.ListOfSeasons == null || Request.Params["Category"] == "" || Request.Params["Category"] == null)
                {
                    { season = 0; }

                }
                else
                {
                    var games = Model.ListOfGames.First(a => a.GameName == Request.Params["Category"].ToString());
                    var lseason = Model.ListOfSeasons.Where(a => a.GameId == games.GameId).ToList();
                    { season = lseason.Count(); }
                }
                <p>Latest Season: @season</p>
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("Create", "Season", new { Category = Request["Category"], GameSeason = season + 1 }, FormMethod.Post))
                {
                    <button class="btn btn-danger" data-dismiss="modal">Close</button>
                    @*<a class="btn btn-success success" type="submit" href="@Url.Action("Create","Season",new { Category = Request["Category"] })">New Entry</a>*@
                    <button class="btn btn-success success" type="submit">New Season</button>
                }
            </div>
        </div>
    </div>
</div>
@* Team modal *@
<div class="modal fade" id="teamSettings" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Team Game Settings</h4>
            </div>
            <div class="modal-body">
                <p>All players are on the same team? </p>
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("Create", "Season", new { Category = Request["Category"], GameSeason = season + 1 }, FormMethod.Post))
                {
                    <button class="btn btn-danger" data-dismiss="modal">Close</button>
                    @*<a class="btn btn-success success" type="submit" href="@Url.Action("Create","Season",new { Category = Request["Category"] })">New Entry</a>*@
                    <button class="btn btn-success success" type="submit">Continue</button>
                }
            </div>
        </div>
    </div>
</div>
@* Individual modal *@
<div class="modal fade" id="individualSettings" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Individual Game Settings</h4>
            </div>

            <div class="modal-body">

            </div>
            <div class="modal-footer">

                <button class="btn btn-danger" data-dismiss="modal">Close</button>
                @*<a class="btn btn-success success" type="submit" href="@Url.Action("Create","Match",new { collection = this, Category = Request["Category"]})">New Entry</a>*@
                <button class="btn btn-success success" type="submit">Continue</button>

            </div>


        </div>
    </div>
</div>
<style>
    .table-bordered {
        /*border: solid;*/
    }

    .link {
        margin-bottom: 4px;
    }

    .card-title {
        font-weight: bold;
    }
</style>